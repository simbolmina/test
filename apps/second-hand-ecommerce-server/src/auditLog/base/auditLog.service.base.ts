/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AuditLog as PrismaAuditLog } from "@prisma/client";

export class AuditLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AuditLogCountArgs, "select">): Promise<number> {
    return this.prisma.auditLog.count(args);
  }

  async auditLogs(
    args: Prisma.AuditLogFindManyArgs
  ): Promise<PrismaAuditLog[]> {
    return this.prisma.auditLog.findMany(args);
  }
  async auditLog(
    args: Prisma.AuditLogFindUniqueArgs
  ): Promise<PrismaAuditLog | null> {
    return this.prisma.auditLog.findUnique(args);
  }
  async createAuditLog(
    args: Prisma.AuditLogCreateArgs
  ): Promise<PrismaAuditLog> {
    return this.prisma.auditLog.create(args);
  }
  async updateAuditLog(
    args: Prisma.AuditLogUpdateArgs
  ): Promise<PrismaAuditLog> {
    return this.prisma.auditLog.update(args);
  }
  async deleteAuditLog(
    args: Prisma.AuditLogDeleteArgs
  ): Promise<PrismaAuditLog> {
    return this.prisma.auditLog.delete(args);
  }
}
