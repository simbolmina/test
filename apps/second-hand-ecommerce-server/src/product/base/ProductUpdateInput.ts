/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsNumber,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { BrandWhereUniqueInput } from "../../brand/base/BrandWhereUniqueInput";
import { Type } from "class-transformer";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import { ImageUpdateManyWithoutProductsInput } from "./ImageUpdateManyWithoutProductsInput";
import { TransactionUpdateManyWithoutProductsInput } from "./TransactionUpdateManyWithoutProductsInput";
import { OfferUpdateManyWithoutProductsInput } from "./OfferUpdateManyWithoutProductsInput";
import { OrderUpdateManyWithoutProductsInput } from "./OrderUpdateManyWithoutProductsInput";
import { ReviewUpdateManyWithoutProductsInput } from "./ReviewUpdateManyWithoutProductsInput";

@InputType()
class ProductUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => BrandWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BrandWhereUniqueInput)
  @IsOptional()
  @Field(() => BrandWhereUniqueInput, {
    nullable: true,
  })
  brand?: BrandWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  seller?: string | null;

  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ImageUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ImageUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ImageUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  images?: ImageUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => OfferUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => OfferUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => OfferUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  offers?: OfferUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  updatedBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  deletedBy?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutProductsInput;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutProductsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutProductsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutProductsInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutProductsInput;
}

export { ProductUpdateInput as ProductUpdateInput };
